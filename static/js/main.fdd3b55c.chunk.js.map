{"version":3,"sources":["components/Navbar/styles.tsx","components/Navbar/index.tsx","pages/Start/styles.tsx","images/start-background.png","images/passport.png","images/car-certification.png","images/national-card.png","images/car-violation.png","images/add-employee.png","images/edit-employee.png","images/edit-admin.png","pages/Start/index.tsx","components/Form/styles.tsx","components/Form/Input/styles.tsx","components/Form/Label/styles.tsx","components/Form/Label/index.tsx","components/Form/Input/index.tsx","components/Form/Button/styles.tsx","components/Form/Button/index.tsx","components/Form/SelectBox/styles.tsx","components/Form/SelectBox/index.tsx","components/Form/FileSelector/styles.tsx","components/Form/FileSelector/index.tsx","components/Form/index.tsx","layouts/Admin/EditAdmin/index.tsx","layouts/Admin/EditEmployee/index.tsx","layouts/Admin/AddEmployee/index.tsx","layouts/Admin/index.tsx","pages/Appplication/styles.tsx","utilities/index.ts","layouts/Employee/CarCertification/index.tsx","layouts/Employee/Passport/index.tsx","layouts/Employee/NationalCard/index.tsx","layouts/Employee/CarViolation/index.tsx","layouts/Employee/SendingStatus/index.tsx","layouts/Employee/index.tsx","pages/Appplication/index.tsx","index.tsx"],"names":["NavbarStyled","styled","nav","memo","withRouter","items","location","map","navbarItem","to","link","className","pathname","onMouseDown","callback","name","StartStyled","section","Start","src","StartBackground","alt","StyledForm","form","InputGroup","div","StyledInput","input","StyledLabel","label","Label","caption","Input","type","placeholder","onChange","value","max","min","regex","lebelName","disable","handleChange","useCallback","event","pattern","disabled","required","StyledButton","button","Button","onClick","handleClick","StyledSelectBox","select","optionsName","console","log","optionName","StyledFileSelector","FileSelector","Form","title","buttons","inputs","selectBoxes","fileSelectors","ref","handleSubmit","preventDefault","onSubmit","index","selectBox","SelectBox","fileSelector","initialState","address","birthDate","birthPlace","email","firstname","gender","identifyCardCode","lastname","nationalCode","phoneNumber","postalCode","reducer","state","action","payload","matchKey","persianKey","EditAdmin","useReducer","dispatch","currentTarget","fetchAdminData","a","fetch","response","json","key","data","useEffect","handleEdit","requestOptions","method","headers","body","JSON","stringify","status","toast","success","error","handleChangeSelectBox","workingId","password","EditEmployee","useState","validationWorkingId","setValidationWorkingId","readyForEdit","setReadyForEdit","handleChangeValidationWorkingId","trim","handleValidateWorkingId","warn","handleDeleteEmployee","handleUpdateEmployee","handleReset","AddEmployee","formRef","useRef","handleAdd","current","checkValidity","loggedIn","setLoggedIn","username","setUsername","setPassword","history","useHistory","handleLogout","push","handleUsernameChange","toLowerCase","handlePassworChange","handleLogin","path","exact","globalStyles","styles","css","printForm","head","document","getElementsByTagName","mainForm","myWindow","window","open","innerHTML","write","close","focus","print","fakeSubmit","Array","from","length","Math","floor","random","join","info","navigator","clipboard","writeText","text","setTimeout","alert","CarCertification","handlePrint","handleBranches","passportType","maritalStatus","Passport","handleMarital","NationalCard","CarViolation","carPlateNumber","setCarPlateNumber","carSerial","setCarSerial","handleChangeCarPlateNumber","handleChangeCarSerial","SendingStatus","nationalCode1","setNationalCode1","nationalCode2","setNationalCode2","trackingCode1","setTrackingCode1","trackingCode2","setTrackingCode2","indentifyCardCode","setIndentifyCardCode","setBirthDate","setBirthPlace","handleChangeNationalCode1","handleChangeNationalCode2","handleChangeTrackingCode1","handleChangeTrackingCode2","handleChangeIndentifyCardCode","handleChangeBirthDate","handleChangeBirthPlace","setWorkingId","setNationalCode","handleWokingIdChange","handleNationalCodeChange","handleFogetPasswordMode","handleResetPassword","Application","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnFocusLoss","pauseOnHover","render","getElementById"],"mappings":"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","file":"static/js/main.fdd3b55c.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const NavbarStyled = styled.nav`\n    margin: 8px auto;\n    border-radius: 8px;\n    padding: 4px 0px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-around;\n    background-color: rgb(202, 240, 255);\n    > a {\n        display: block;\n        text-decoration: none;\n        font-size: 18px;\n        border-radius: 8px;\n        font-weight: bold;\n        color: #ffffff;\n        :hover {\n            background-color: #151e33;\n        }\n        padding: 4px 8px;\n    }\n\n    .deactive {\n        background-color: #297bbe;\n    }\n\n    .active {\n        background-color: #151e33;\n    }\n`;\n","import {memo} from 'react';\nimport {Link, RouteComponentProps, withRouter} from 'react-router-dom';\nimport {NavbarStyled} from './styles';\n\ninterface INavbarItem {\n    name: string;\n    link: string;\n    callback?: () => void;\n}\n\ninterface IProps {\n    items: INavbarItem[];\n}\n\n\nfunction Navbar({\n    items,\n    location,\n}: IProps & RouteComponentProps): React.ReactElement {\n    return (\n        <NavbarStyled>\n            {\n                items.map(navbarItem => (\n                    <Link\n                        key={navbarItem.link}\n                        to={navbarItem.link}\n                        className={location.pathname === navbarItem.link ? 'active' : 'deactive'}\n                        onMouseDown={navbarItem.callback}\n                    >\n                        {navbarItem.name}\n                    </Link>\n                ))\n            }\n        </NavbarStyled>\n    );\n}\n\n\nexport default memo(withRouter(Navbar));","import styled from '@emotion/styled';\n\n\nexport const StartStyled = styled.section`\n    width: 1200px;\n    margin: 0px auto;\n    text-align: center;\n\n    > img {\n        width: 1200px;\n        height: 800px;\n        border-radius: 8px;\n    }\n`;","export default __webpack_public_path__ + \"static/media/start-background.ff61d89e.png\";","export default __webpack_public_path__ + \"static/media/passport.e49d2773.png\";","export default __webpack_public_path__ + \"static/media/car-certification.a891a14b.png\";","export default __webpack_public_path__ + \"static/media/national-card.1d7aff83.png\";","export default __webpack_public_path__ + \"static/media/car-violation.e6c28ef8.png\";","export default __webpack_public_path__ + \"static/media/add-employee.38c9e477.png\";","export default __webpack_public_path__ + \"static/media/edit-employee.148a762e.png\";","export default __webpack_public_path__ + \"static/media/edit-admin.d2723be3.png\";","import {memo} from 'react';\nimport {StartStyled} from './styles';\nimport {StartBackground} from '../../images';\n\n\nfunction Start(): React.ReactElement  {\n    return (\n        <StartStyled>\n            <img src={StartBackground} alt=\"background\"/>\n        </StartStyled>\n    )\n}\n\nexport default memo(Start);","import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n    margin: 32px auto;\n    width: 1200px;\n    box-sizing: border-box;\n    border: 2px solid #000000;\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px;\n\n    h3 {\n        font-size: 28px;\n        background-color: #ffc011;\n        padding: 8px 32px;\n        margin: 16px auto;\n        border-radius: 32px;\n    }\n`\n\n\nexport const InputGroup = styled.div`\n    width: 1000px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin: 8px auto;\n    padding: 2px;\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledInput = styled.input`\n    display: block;\n    margin: 0px 8px;\n    text-align: center;\n    font-size: 16px;\n    box-shadow: none;\n    outline: none;\n    border-radius: 5px;\n    border: 2px solid #000000;\n    padding: 2px 8px;\n    background-color: white;\n    width: 360px;\n\n    :focus {\n        border-color: #09a5ff;\n    }\n`;","import styled from '@emotion/styled';\n\nexport const StyledLabel = styled.label`\n    display: block;\n    text-align: center;\n    font-size: 16px;\n    background-color: #d4d4d4;\n    color: black;\n    border-radius: 5px;\n    padding: 4px 8px;\n    margin: 0px 8px;\n    width: 360px;\n`;\n","import React, {memo} from 'react';\nimport {StyledLabel} from './styles';\n\nexport interface IProps {\n    caption: string;\n}\n\n\nfunction Label({caption}: IProps): React.ReactElement {\n    return (\n        <StyledLabel>\n            {caption}\n        </StyledLabel>\n    )\n}\n\n\nexport default memo(Label);","import React, {memo, useCallback} from 'react';\nimport {StyledInput} from './styles';\nimport Label from '../Label';\n\n\nexport interface IProps {\n    type: 'text' | 'password';\n    onChange: (event: React.FormEvent<HTMLInputElement>) => void;\n    value: string;\n    lebelName: string;\n    placeholder?: string;\n    max?: number;\n    min?: number;\n    regex?: string;\n    disable?: boolean;\n}\n\n\nfunction Input({\n    type,\n    placeholder,\n    onChange,\n    value,\n    max,\n    min,\n    regex,\n    lebelName,\n    disable = false\n}: IProps): React.ReactElement {\n    const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n        onChange(event);\n    }, [onChange]);\n\n    return (\n        <>\n            <Label caption={lebelName} />\n            <StyledInput\n                onChange={handleChange}\n                type={type}\n                placeholder={placeholder}\n                value={value}\n                max={max}\n                min={min}\n                name={lebelName}\n                pattern={regex}\n                disabled={disable}\n                required\n            />\n        </>\n    )\n}\n\n\nexport default memo(Input);","import styled from '@emotion/styled';\n\n\nexport const StyledButton = styled.button`\n    padding: 8px 16px;\n    border-radius: 5px;\n    border: 2px solid #0d5328;\n    background-color: #21a03d;\n    color: white;\n    font-size: 18px;\n    font-weight: bold;\n    cursor: pointer;\n    margin: 0px 8px;\n\n    :hover {\n        background-color: #0dbb0d;\n    }\n\n    :active {\n        transform: scale(0.95);\n    }\n`;","import React, {memo, useCallback} from 'react';\nimport {StyledButton} from './styles';\n\nexport interface IProps {\n    caption: string;\n    onClick?: () => void;\n}\n\n\nfunction Button({\n    caption,\n    onClick,\n}: IProps): React.ReactElement {\n    const handleClick = useCallback(() => {\n        onClick?.();\n    }, [onClick]);\n\n    return (\n        <StyledButton onClick={handleClick} type='button'>\n            {caption}\n        </StyledButton>\n    )\n}\n\n\nexport default memo(Button);","import styled from '@emotion/styled';\n\n\nexport const StyledSelectBox = styled.select`\n    display: block;\n    margin: 0px 8px;\n    text-align: center;\n    font-size: 16px;\n    box-shadow: none;\n    outline: none;\n    border-radius: 5px;\n    border: 2px solid #000000;\n    padding: 2px 8px;\n    background-color: white;\n    width: 380px;\n\n    :focus {\n        border-color: #09a5ff;\n    }\n`;","import React, {memo, useCallback} from 'react';\nimport {StyledSelectBox} from './styles';\nimport Label from '../Label';\n\n\nexport interface IProps {\n    value: string;\n    lebelName: string;\n    optionsName: string[];\n    onChange: (event: React.FormEvent<HTMLSelectElement>) => void;\n}\n\n\nfunction Input({\n    optionsName,\n    value,\n    onChange,\n    lebelName\n}: IProps): React.ReactElement {\n    const handleChange = useCallback((event: React.FormEvent<HTMLSelectElement>) => {\n        onChange(event);\n        console.log(event);\n    }, [onChange]);\n\n    return (\n        <>\n            <Label caption={lebelName} />\n            <StyledSelectBox value={value} onChange={handleChange} name={lebelName}>\n                {optionsName.map((optionName) => (\n                    <option value={optionName}>{optionName}</option>\n                ))}\n            </StyledSelectBox>\n        </>\n    )\n}\n\n\nexport default memo(Input);","import styled from '@emotion/styled';\r\n\r\nexport const StyledFileSelector = styled.input`\r\n    display: block;\r\n    margin: 0px 8px;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    box-shadow: none;\r\n    outline: none;\r\n    border-radius: 5px;\r\n    border: 2px solid #000000;\r\n    padding: 2px 8px;\r\n    background-color: white;\r\n    width: 360px;\r\n\r\n    :focus {\r\n        border-color: #09a5ff;\r\n    }\r\n`;","import React, {memo} from 'react';\r\nimport {StyledFileSelector} from './styles';\r\nimport Label from '../Label';\r\n\r\n\r\nexport interface IProps {\r\n    lebelName: string;\r\n}\r\n\r\nfunction FileSelector({\r\n    lebelName\r\n}: IProps): React.ReactElement {\r\n    return (\r\n        <>\r\n            <Label caption={lebelName} />\r\n            <StyledFileSelector type='file' />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default memo(FileSelector);","import React, {memo, useCallback} from 'react';\nimport {InputGroup, StyledForm} from './styles';\nimport Input, {IProps as IInputProps} from './Input';\nimport Button, {IProps as IButtonProps} from './Button';\nimport SelectBox, {IProps as ISelectBoxProps} from './SelectBox';\nimport FileSelector, {IProps as IFileSelector} from './FileSelector';\n\n\n\ninterface IProps {\n    title: string;\n    buttons: IButtonProps[];\n    inputs?: IInputProps[];\n    selectBoxes?: ISelectBoxProps[];\n    fileSelectors?: IFileSelector[];\n    ref?: React.LegacyRef<HTMLFormElement> | undefined;\n}\n\n\nfunction Form({\n    title,\n    buttons,\n    inputs = [],\n    selectBoxes = [],\n    fileSelectors = [],\n    ref\n}: IProps): React.ReactElement {\n    const handleSubmit = useCallback((event: React.FormEvent) => {\n        event.preventDefault();\n    }, []);\n\n    console.log(ref);\n    \n    return (\n        <StyledForm onSubmit={handleSubmit} ref={ref}>\n            <h3>{title}</h3>\n            {inputs.map((input, index) => (\n                <InputGroup key={`input-group-${index}`}>\n                    <Input\n                        value={input.value}\n                        onChange={input.onChange}\n                        type={input.type}\n                        lebelName={input.lebelName}\n                        max={input.max}\n                        min={input.min}\n                        placeholder={input.placeholder}\n                        regex={input.regex}\n                        disable={input.disable}\n                    />\n                </InputGroup>\n            ))}\n            {selectBoxes.map((selectBox, index) => (\n                <InputGroup key={`selectbox-group-${index}`}>\n                    <SelectBox\n                        lebelName={selectBox.lebelName}\n                        onChange={selectBox.onChange}\n                        value={selectBox.value}\n                        optionsName={selectBox.optionsName}\n                    />\n                </InputGroup>\n            ))}\n            {fileSelectors.map((fileSelector, index) => (\n                <InputGroup>\n                    <FileSelector\n                        key={`input-group-button-${index}`}\n                        lebelName={fileSelector.lebelName}\n                    />\n                </InputGroup>\n            ))}\n            <InputGroup>\n                {buttons.map((button, index) => (\n                    <Button\n                        key={`input-group-button-${index}`}\n                        caption={button.caption}\n                        onClick={button.onClick}\n                    />\n                ))}\n            </InputGroup>\n        </StyledForm>\n    );\n}\n\n\nexport default memo(Form);","import {memo, useCallback, useReducer, useEffect} from 'react';\nimport Form from '../../../components/Form';\nimport {IAdminData} from '../../../utilities/types';\nimport {toast} from 'react-toastify';\n\nconst initialState: IAdminData = {\n    address: '',\n    birthDate: '',\n    birthPlace: '',\n    email: '',\n    firstname: '',\n    gender: '',\n    identifyCardCode: '',\n    lastname: '',\n    nationalCode: '',\n    phoneNumber: '',\n    postalCode: ''\n}\n\ninterface IAction {\n    type: 'firstname' | 'gender' | 'lastname' | 'address' | 'birthDate' |'identifyCardCode' |\n        'nationalCode' | 'postalCode' | 'phoneNumber' | 'birthPlace' | 'email';\n    payload: string;\n};\n\nfunction reducer(state: IAdminData, action: IAction) {\n    switch(action.type) {\n        case 'address':\n            return {...state, address: action.payload};\n        case 'birthDate':\n            return {...state, birthDate: action.payload};\n        case 'birthPlace':\n            return {...state, birthPlace: action.payload};\n        case 'email':\n            return {...state, email: action.payload};\n        case 'firstname':\n            return {...state, firstname: action.payload};\n        case 'gender':\n            return {...state, gender: action.payload};\n        case 'identifyCardCode':\n            return {...state, identifyCardCode: action.payload};\n        case 'lastname':\n            return {...state, lastname: action.payload};\n        case 'nationalCode':\n            return {...state, nationalCode: action.payload};\n        case 'phoneNumber':\n            return {...state, phoneNumber: action.payload};\n        case 'postalCode':\n            return {...state, postalCode: action.payload};\n        default:\n            return {...state};\n\n    }\n}\n\nfunction matchKey(persianKey: string): keyof IAdminData  {\n    switch (persianKey) {\n        case 'نام':\n            return 'firstname';\n        case 'نام خانوادگی':\n            return 'lastname';\n        case 'کد ملی':\n        case 'identifycardcode':\n            return 'identifyCardCode';\n        case 'شماره شناسنامه':\n        case 'nationalcode':\n            return 'nationalCode';\n        case 'تاریخ تولد':\n        case 'birthdate':\n            return 'birthDate';\n        case 'محل تولد':\n        case 'birthplace':\n            return 'birthPlace';\n        case 'آدرس':\n            return 'address';\n        case 'شماره تلفن':\n        case 'phonenumber':\n            return 'phoneNumber';\n        case 'کد پستی':\n        case 'postalcode':\n            return 'postalCode';\n        case 'ایمیل':\n            return 'email';\n        case 'جنسیت':\n            return 'gender';\n        default:\n            return 'firstname';\n    }\n}\n\n\nfunction EditAdmin(): React.ReactElement {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n        const type = matchKey(event.currentTarget.name) as IAction['type'];\n        const payload = event.currentTarget.value;\n\n        dispatch({payload, type})\n    }, []);\n\n    async function fetchAdminData() {\n        const response = await fetch('https://quizlab.ir/api/admin/info');\n        const data = await response.json();\n        for (const key in data) {\n            dispatch({type: key as IAction['type'], payload: data[key]});\n        }\n    }\n\n    useEffect(() => {\n        fetchAdminData();\n    }, []);\n\n    const handleEdit = useCallback(async () => {\n        const requestOptions = {\n            method: 'PUT',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(state)\n        };\n        const response = await fetch('https://quizlab.ir/api/admin/edit', requestOptions);\n        const data = await response.json();\n        if (data.status === 'OK') {\n            toast.success('با موفقیت بروز رسانی شد!');\n            fetchAdminData();\n        }\n        else if (data.status === 'ERROR') {\n            toast.error('خطایی در سرور رخ داده!');\n        }\n        else {\n            toast.error('خطا در اتصال به سرور!');\n        }\n    }, [state]);\n\n    const handleChangeSelectBox = useCallback((event: React.FormEvent<HTMLSelectElement>) => {\n        const type = matchKey(event.currentTarget.name) as IAction['type'];\n        const payload = event.currentTarget.value;\n        console.log(type, payload);\n        dispatch({payload, type})\n    }, []);\n\n\n    return (\n        <>\n            <Form\n                title='ویرایش مشخصات ادمین'\n                inputs={[\n                    {lebelName: 'نام', type: 'text', value: state.firstname, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\n                    {lebelName: 'نام خانوادگی', type: 'text', value: state.lastname, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\n                    {lebelName: 'کد ملی', type: 'text', value: state.identifyCardCode, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\n                    {lebelName: 'شماره شناسنامه', type: 'text', value: state.nationalCode, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\n                    {lebelName: 'تاریخ تولد', type: 'text', value: state.birthDate, onChange: handleChange, placeholder: 'YYYY-MM-DD'},\n                    {lebelName: 'محل تولد', type: 'text', value: state.birthPlace, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\n                    {lebelName: 'آدرس', type: 'text', value: state.address, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\n                    {lebelName: 'شماره تلفن', type: 'text', value: state.phoneNumber, onChange: handleChange, placeholder: 'شماره تلفن ۱۱ رقمی'},\n                    {lebelName: 'کد پستی', type: 'text', value: state.postalCode, onChange: handleChange, placeholder: 'کد پستی ‍۱۰ رقمی'},\n                    {lebelName: 'ایمیل', type: 'text', value: state.email, onChange: handleChange, placeholder: 'لطفا در وارد کردن ایمیل دقت بفرمایید'},\n                ]}\n                selectBoxes={[\n                    {lebelName: 'جنسیت', onChange: handleChangeSelectBox, value: state.gender, optionsName: ['مرد', 'زن']}\n                ]}\n                buttons={[\n                    {caption: 'ویرایش', onClick: handleEdit}\n                ]}\n            />\n        </>\n    )\n}\n\n\nexport default memo(EditAdmin);","import {memo, useCallback, useReducer, useState} from 'react';\nimport Form from '../../../components/Form';\nimport {IEmployeeData} from '../../../utilities/types';\nimport {toast} from 'react-toastify';\n\nconst initialState: IEmployeeData = {\n    address: '',\n    birthDate: '',\n    birthPlace: '',\n    email: '',\n    firstname: '',\n    gender: '',\n    identifyCardCode: '',\n    lastname: '',\n    nationalCode: '',\n    phoneNumber: '',\n    postalCode: '',\n    workingId: '',\n    password: '',\n}\n\ninterface IAction {\n    type: 'firstname' | 'gender' | 'lastname' | 'address' | 'birthDate' |\n    'identifyCardCode' | 'nationalCode' | 'postalCode' | 'phoneNumber' |\n    'birthPlace' | 'email' | 'workingId' | 'password';\n    payload: string;\n};\nfunction reducer(state: IEmployeeData, action: IAction) {\n    switch(action.type) {\n        case 'address':\n            return {...state, address: action.payload};\n        case 'birthDate':\n            return {...state, birthDate: action.payload};\n        case 'birthPlace':\n            return {...state, birthPlace: action.payload};\n        case 'email':\n            return {...state, email: action.payload};\n        case 'firstname':\n            return {...state, firstname: action.payload};\n        case 'gender':\n            return {...state, gender: action.payload};\n        case 'identifyCardCode':\n            return {...state, identifyCardCode: action.payload};\n        case 'lastname':\n            return {...state, lastname: action.payload};\n        case 'nationalCode':\n            return {...state, nationalCode: action.payload};\n        case 'phoneNumber':\n            return {...state, phoneNumber: action.payload};\n        case 'postalCode':\n            return {...state, postalCode: action.payload};\n        case 'workingId':\n            return {...state, workingId: action.payload};\n        case 'password':\n            return {...state, password: action.payload};\n        default:\n            return {...state};\n\n    }\n}\n\nfunction matchKey(persianKey: string): keyof IEmployeeData  {\n    switch (persianKey) {\n        case 'نام':\n            return 'firstname';\n        case 'نام خانوادگی':\n            return 'lastname';\n        case 'کد ملی':\n            return 'identifyCardCode';\n        case 'شماره شناسنامه':\n            return 'nationalCode';\n        case 'تاریخ تولد':\n            return 'birthDate';\n        case 'محل تولد':\n            return 'birthPlace';\n        case 'آدرس':\n            return 'address';\n        case 'شماره تلفن':\n            return 'phoneNumber';\n        case 'کد پستی':\n            return 'postalCode';\n        case 'ایمیل':\n            return 'email';\n        case 'جنسیت':\n            return 'gender';\n        case 'کد پرسنلی':\n            return 'workingId';\n        case 'رمز عبور':\n            return 'password';\n        default:\n            return 'firstname';\n    }\n}\nfunction EditEmployee(): React.ReactElement {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const [validationWorkingId, setValidationWorkingId] = useState<string>('');\n    const [readyForEdit, setReadyForEdit] = useState<boolean>(false);\n\n    const handleChangeValidationWorkingId = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n        setValidationWorkingId(event.currentTarget.value.trim());\n    }, []);\n\n    const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n        const type = matchKey(event.currentTarget.name) as IAction['type'];\n        const payload = event.currentTarget.value;\n\n        dispatch({payload, type})\n    }, []);\n\n    const handleChangeSelectBox = useCallback((event: React.FormEvent<HTMLSelectElement>) => {\n        const type = matchKey(event.currentTarget.name) as IAction['type'];\n        const payload = event.currentTarget.value;\n        console.log(type, payload);\n        dispatch({payload, type})\n    }, []);\n\n    const handleValidateWorkingId = useCallback(async () => {\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({workingId: validationWorkingId})\n        };\n\n        const response = await fetch('https://quizlab.ir/api/admin/employee', requestOptions);\n        const data = await response.json();\n\n        console.log(data);\n\n        if (data.status === 'NO') {\n            toast.warn('کارمندی با این شماره پرسنلی یافت نشد!');\n        }\n        else if (data.status === 'ERROR') {\n            toast.error('خطایی در سرور رخ داده است!');\n        }\n        else if (data.status !== false) {\n            toast.success('کارمند مورد نظر پیدا شد!');\n            setReadyForEdit(true);\n            for (const key in data) {\n                dispatch({type: key as IAction['type'], payload: data[key]});\n            }\n        }\n        else {\n            toast.error('خطا در برقراری ارتباط با سرور!');\n        }\n    }, [validationWorkingId]);\n\n    const handleDeleteEmployee = useCallback(async () => {\n        const requestOptions = {\n            method: 'DELETE',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({workingId: validationWorkingId})\n        };\n\n        console.log(requestOptions.body);\n\n        const response = await fetch('https://quizlab.ir/api/admin/delete-employee', requestOptions);\n        const data = await response.json();\n\n        if (data.status === 'OK') {\n            toast.success('کارمند با موفقیت حذف شد!');\n            setValidationWorkingId('');\n            setReadyForEdit(false);\n        }\n        else if (data.status === 'ERROR') {\n            toast.error('خطایی در سرور رخ داده است!');\n        }\n        else {\n            toast.error('خطا در برقراری ارتباط با سرور!');\n        }\n    }, [validationWorkingId]);\n\n    const handleUpdateEmployee = useCallback(async () => {\n        const requestOptions = {\n            method: 'PUT',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({...state})\n        };\n\n        console.log(requestOptions.body);\n\n        const response = await fetch('https://quizlab.ir/api/admin/edit-employee', requestOptions);\n        const data = await response.json();\n\n        if (data.status === 'OK') {\n            toast.success('مشخصات کارمند بروز رسانی شد!');\n        }\n        else if (data.status === 'ERROR') {\n            toast.error('خطایی در سرور رخ داده است!');\n        }\n        else {\n            toast.error('خطا در اتصال به سرور!');\n        }\n\n    }, [state]);\n\n    const handleReset = useCallback(() => {\n        setValidationWorkingId('');\n        setReadyForEdit(false);\n    }, []);\n\n    return (\n        <>\n            {readyForEdit ?\n                <Form\n                    title='ویرایش مشخصات کارمند'\n                    inputs={[\n                        {lebelName: 'کد پرسنلی', type: 'text', value: state.workingId, onChange: handleChange, disable: true, placeholder: 'کد ۱۰ رقمی'},\n                        {lebelName: 'نام', type: 'text', value: state.firstname, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\n                        {lebelName: 'نام خانوادگی', type: 'text', value: state.lastname, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\n                        {lebelName: 'رمز عبور', type: 'password', value: state.password, onChange: handleChange, placeholder: 'xxxxxxxx'},\n                        {lebelName: 'کد ملی', type: 'text', value: state.identifyCardCode, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\n                        {lebelName: 'شماره شناسنامه', type: 'text', value: state.nationalCode, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\n                        {lebelName: 'تاریخ تولد', type: 'text', value: state.birthDate, onChange: handleChange, placeholder: 'YYYY-MM-DD'},\n                        {lebelName: 'محل تولد', type: 'text', value: state.birthPlace, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\n                        {lebelName: 'آدرس', type: 'text', value: state.address, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\n                        {lebelName: 'شماره تلفن', type: 'text', value: state.phoneNumber, onChange: handleChange, placeholder: 'شماره تلفن ۱۱ رقمی'},\n                        {lebelName: 'کد پستی', type: 'text', value: state.postalCode, onChange: handleChange, placeholder: 'کد پستی ۱۰ رقمی'},\n                        {lebelName: 'ایمیل', type: 'text', value: state.email, onChange: handleChange, placeholder: 'لطفا در وارد کردن ایمیل دقت بفرمایید'},\n                    ]}\n                    selectBoxes={[\n                        {lebelName: 'جنسیت', onChange: handleChangeSelectBox, value: state.gender, optionsName: ['مرد', 'زن']}\n                    ]}\n                    buttons={[\n                        {caption: 'ویرایش کردن', onClick: handleUpdateEmployee},\n                        {caption: 'حذف کردن', onClick: handleDeleteEmployee},\n                        {caption: 'بررسی مجدد', onClick: handleReset},\n                    ]}\n                />\n                :\n                <Form\n                    title='ویرایش مشخصات کارمند'\n                    buttons={[{caption: 'بررسی', onClick: handleValidateWorkingId}]}\n                    inputs={[{\n                        lebelName: 'کد پرسنلی',\n                        type: 'text',\n                        value: validationWorkingId,\n                        onChange: handleChangeValidationWorkingId,\n                        placeholder: 'کد پرسنلی ۱۰ رقمی'\n                    }]}\n                />\n            }\n        </>\n    )\n}\n\n\nexport default memo(EditEmployee);","import {memo, useCallback, useReducer, useRef} from 'react';\nimport Form from '../../../components/Form';\nimport {IEmployeeData} from '../../../utilities/types';\nimport {toast} from 'react-toastify';\n\nconst initialState: IEmployeeData = {\n    address: '',\n    birthDate: '',\n    birthPlace: '',\n    email: '',\n    firstname: '',\n    gender: 'مرد',\n    identifyCardCode: '',\n    lastname: '',\n    nationalCode: '',\n    phoneNumber: '',\n    postalCode: '',\n    workingId: '',\n    password: '',\n}\n\ninterface IAction {\n    type: 'firstname' | 'gender' | 'lastname' | 'address' | 'birthDate' |\n    'identifyCardCode' | 'nationalCode' | 'postalCode' | 'phoneNumber' |\n    'birthPlace' | 'email' | 'workingId' | 'password';\n    payload: string;\n};\nfunction reducer(state: IEmployeeData, action: IAction) {\n    switch(action.type) {\n        case 'address':\n            return {...state, address: action.payload};\n        case 'birthDate':\n            return {...state, birthDate: action.payload};\n        case 'birthPlace':\n            return {...state, birthPlace: action.payload};\n        case 'email':\n            return {...state, email: action.payload};\n        case 'firstname':\n            return {...state, firstname: action.payload};\n        case 'gender':\n            return {...state, gender: action.payload};\n        case 'identifyCardCode':\n            return {...state, identifyCardCode: action.payload};\n        case 'lastname':\n            return {...state, lastname: action.payload};\n        case 'nationalCode':\n            return {...state, nationalCode: action.payload};\n        case 'phoneNumber':\n            return {...state, phoneNumber: action.payload};\n        case 'postalCode':\n            return {...state, postalCode: action.payload};\n        case 'workingId':\n            return {...state, workingId: action.payload};\n        case 'password':\n            return {...state, password: action.payload};\n        default:\n            return {...state};\n    }\n}\n\nfunction matchKey(persianKey: string): keyof IEmployeeData  {\n    switch (persianKey) {\n        case 'نام':\n            return 'firstname';\n        case 'نام خانوادگی':\n            return 'lastname';\n        case 'کد ملی':\n            return 'identifyCardCode';\n        case 'شماره شناسنامه':\n            return 'nationalCode';\n        case 'تاریخ تولد':\n            return 'birthDate';\n        case 'محل تولد':\n            return 'birthPlace';\n        case 'آدرس':\n            return 'address';\n        case 'شماره تلفن':\n            return 'phoneNumber';\n        case 'کد پستی':\n            return 'postalCode';\n        case 'ایمیل':\n            return 'email';\n        case 'جنسیت':\n            return 'gender';\n        case 'کد پرسنلی':\n            return 'workingId';\n        case 'رمز عبور':\n            return 'password';\n        default:\n            return 'firstname';\n    }\n}\n\n\nfunction AddEmployee(): React.ReactElement {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const formRef = useRef<HTMLFormElement>(null);\n\n    const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n        const type = matchKey(event.currentTarget.name) as IAction['type'];\n        const payload = event.currentTarget.value;\n\n        dispatch({payload, type})\n    }, []);\n\n    const handleChangeSelectBox = useCallback((event: React.FormEvent<HTMLSelectElement>) => {\n        const type = matchKey(event.currentTarget.name) as IAction['type'];\n        const payload = event.currentTarget.value;\n        console.log(type, payload);\n        dispatch({payload, type})\n    }, []);\n\n    const handleAdd = useCallback(async () => {\n        const x = formRef.current?.checkValidity();\n        console.log(formRef.current);\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(state)\n        };\n        const response = await fetch('https://quizlab.ir/api/admin/add-employee', requestOptions);\n        const data = await response.json();\n        if (data.status === 'OK') {\n            toast.success('کارمند جدید با موفقیت اضافه شد!');\n        }\n        else if (data.status === 'ERROR') {\n            toast.error('خطایی در سرور رخ داده است!');\n        }\n        else {\n            toast.error('خطا در اتصال به سرور!');\n        }\n    }, [state]);\n\n\n    return (\n        <>\n            <Form\n                ref={formRef}\n                title='افزودن کارمند جدید'\n                inputs={[\n                    {lebelName: 'نام', type: 'text', value: state.firstname, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\n                    {lebelName: 'نام خانوادگی', type: 'text', value: state.lastname, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\n                    {lebelName: 'کد پرسنلی', type: 'text', value: state.workingId, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\n                    {lebelName: 'رمز عبور', type: 'password', value: state.password, onChange: handleChange, placeholder: 'xxxxxxxx'},\n                    {lebelName: 'کد ملی', type: 'text', value: state.identifyCardCode, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\n                    {lebelName: 'شماره شناسنامه', type: 'text', value: state.nationalCode, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\n                    {lebelName: 'تاریخ تولد', type: 'text', value: state.birthDate, onChange: handleChange, placeholder: 'YYYY-MM-DD'},\n                    {lebelName: 'محل تولد', type: 'text', value: state.birthPlace, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\n                    {lebelName: 'آدرس', type: 'text', value: state.address, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\n                    {lebelName: 'شماره تلفن', type: 'text', value: state.phoneNumber, onChange: handleChange, placeholder: 'شماره تلفن ۱۱ رقمی'},\n                    {lebelName: 'کد پستی', type: 'text', value: state.postalCode, onChange: handleChange, placeholder: 'کد پستی ۱۰ رقمی'},\n                    {lebelName: 'ایمیل', type: 'text', value: state.email, onChange: handleChange, placeholder: 'لطفا در وارد کردن ایمیل دقت بفرمایید'},\n                ]}\n                selectBoxes={[\n                    {lebelName: 'جنسیت', onChange: handleChangeSelectBox, value: state.gender, optionsName: ['مرد', 'زن']}\n                ]}\n                buttons={[\n                    {caption: 'افزودن', onClick: handleAdd}\n                ]}\n            />\n        </>\n    )\n}\n\n\nexport default memo(AddEmployee);","import {memo, useState, useCallback} from 'react';\nimport EditAdmin from './EditAdmin';\nimport EditEmployee from './EditEmployee';\nimport AddEmployee from './AddEmployee';\nimport {withRouter, useHistory, Route} from 'react-router-dom';\nimport Form from '../../components/Form';\nimport {toast} from 'react-toastify';\n\n\nfunction Admin(): React.ReactElement {\n    const [loggedIn, setLoggedIn] = useState<boolean>(false);\n    const [username, setUsername] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n\n    const history = useHistory();\n\n    const handleLogout = useCallback(() => {\n        setLoggedIn(false);\n        setUsername('');\n        setPassword('');\n        history.push('/admin');\n    }, [history]);\n\n    const handleUsernameChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n        setUsername(event.currentTarget.value?.trim().toLowerCase() || '')\n    }, []);\n\n    const handlePassworChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n        setPassword(event.currentTarget.value?.trim().toLowerCase() || '')\n    }, []);\n\n    const handleLogin = useCallback(async () => {\n        if (username !== '' && password !== '') {\n            const requestOptions = {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({username, password})\n            };\n            const response = await fetch('https://quizlab.ir/api/admin/login', requestOptions);\n            const data = await response.json();\n\n            if (data.status === 'OK') {\n                toast.success('با موفقیت وارد شدید!');\n                setLoggedIn(true);\n            }\n            else if (data.status === 'WRONG') {\n                toast.warn('نام کاربری یا رمز عبور اشتباه است!');\n            }\n            else if (data.status === 'ERROR') {\n                toast.error('خطایی در سرور رخ داده!');\n            }\n            else {\n                toast.error('خطا در اتصال به سرور!');\n            }\n        }\n        \n    }, [username, password]);\n\n    return (\n        <>\n        {loggedIn ?\n            <>\n            <Form\n                title='ادمین'\n                buttons={[\n                    {caption: 'ویرایش مشخصات ادمین', onClick: () => {history.push('/admin/edit-admin')}},\n                    {caption: 'افزودن کارمند جدید', onClick: () => {history.push('/admin/add-employee')}},\n                    {caption: 'ویرایش مشخصات کارمندان', onClick: () => {history.push('/admin/edit-employee')}},\n                    {caption: 'خروج', onClick: handleLogout},\n                ]}\n            />\n            <Route path='/admin/edit-admin' exact>\n                <EditAdmin />\n            </Route>\n            <Route path='/admin/add-employee' exact>\n                <AddEmployee />\n            </Route>\n            <Route path='/admin/edit-employee' exact>\n                <EditEmployee />\n            </Route>\n            </>\n        :\n            <Form\n                title='ورود ادمین'\n                inputs={[\n                    {lebelName: 'نام کاربری', type: 'text', value: username, onChange: handleUsernameChange, placeholder: '?????'},\n                    {lebelName: 'رمز عبور', type: 'password', value: password, onChange: handlePassworChange, placeholder: 'xxxxxxxx'},\n                ]}\n                buttons={[{caption: 'ورود', onClick: handleLogin}]}\n            />\n    }  \n    </>\n    );\n}\n\n\nexport default memo(withRouter(Admin));","import {css, Global} from '@emotion/react';\n\n\nexport const globalStyles = (\n    <Global\n        styles={css`\n            html {\n                scroll-behavior: smooth;\n            }\n            \n            body {\n                font-family: Vazir;\n                padding: 0px;\n                min-height: 100vh;\n                width: 1200px;\n                margin: 0px auto;\n                background-color: #ffffff;\n                direction: rtl;\n            }\n\n            input, button, * {\n                font-family: Vazir;\n            }\n        `}\n    />\n);\n","import {toast} from 'react-toastify';\r\n\r\n\r\nexport function printForm() {\r\n    const head = document.getElementsByTagName('head')[0];\r\n    const mainForm = document.getElementsByTagName('form')[1];\r\n    const myWindow = window.open('', 'PRINT', 'height=500,width=800');\r\n    console.log(head.innerHTML);\r\n    myWindow?.document.write(`<html><head>${head.innerHTML}</head><body>`);\r\n    myWindow?.document.write(`${mainForm.innerHTML}</body></html>`);\r\n        \r\n    myWindow?.document.close(); // necessary for IE >= 10\r\n    myWindow?.focus(); // necessary for IE >= 10*/\r\n\r\n    myWindow?.print();\r\n}\r\n\r\n\r\nexport function fakeSubmit() {\r\n    const key = Array.from({length: 20}, () => {\r\n        return (Math.floor(Math.random() * 10))\r\n    }).join('');\r\n\r\n\r\n    toast.info('لطفا چندلحظه صبر کنید');\r\n\r\n    navigator.clipboard.writeText(key);\r\n\r\n    const text = 'کد پیگیری شما:\\n' + key + '\\nلطفا کد را در جایی ثبت کنید.\\nکد در کلیپ بورد شما ذخیره شده است.';\r\n\r\n    setTimeout(() => {\r\n        window.alert(text);\r\n    }, 3500);\r\n}\r\n\r\n\r\nexport function fakeGetStatus() {\r\n    toast.info('لطفا چندلحظه صبر کنید');\r\n    setTimeout(() => {\r\n        window.alert('وضعیت استعلام تا دقایقی دیگر به تلفن همراه شما پیامک خواهد شد.');\r\n    }, 3500);\r\n}","import { memo, useCallback, useReducer } from 'react';\r\nimport Form from '../../../components/Form';\r\nimport {printForm, fakeSubmit} from '../../../utilities';\r\n\r\n\r\ninterface IState {\r\n    address: string;\r\n    birthDate: string;\r\n    phoneNumber: string;\r\n    postalCode: string;\r\n    nationalCode: string;\r\n    gender: string;\r\n    firstname: string;\r\n    lastname: string;\r\n    identifyCardCode: string;\r\n}\r\n\r\nconst initialState: IState = {\r\n    address: '',\r\n    birthDate: '',\r\n    firstname: '',\r\n    gender: 'مرد',\r\n    identifyCardCode: '',\r\n    lastname: '',\r\n    nationalCode: '',\r\n    phoneNumber: '',\r\n    postalCode: '',\r\n}\r\n\r\ninterface IAction {\r\n    type: 'firstname' | 'gender' | 'lastname' | 'address' | 'birthDate' |\r\n    'identifyCardCode' | 'nationalCode' | 'postalCode' | 'phoneNumber';\r\n    payload: string;\r\n};\r\nfunction reducer(state: IState, action: IAction) {\r\n    switch(action.type) {\r\n        case 'address':\r\n            return {...state, address: action.payload};\r\n        case 'birthDate':\r\n            return {...state, birthDate: action.payload};\r\n        case 'firstname':\r\n            return {...state, firstname: action.payload};\r\n        case 'gender':\r\n            return {...state, gender: action.payload};\r\n        case 'identifyCardCode':\r\n            return {...state, identifyCardCode: action.payload};\r\n        case 'lastname':\r\n            return {...state, lastname: action.payload};\r\n        case 'nationalCode':\r\n            return {...state, nationalCode: action.payload};\r\n        case 'phoneNumber':\r\n            return {...state, phoneNumber: action.payload};\r\n        case 'postalCode':\r\n            return {...state, postalCode: action.payload};\r\n        default:\r\n            return {...state};\r\n\r\n    }\r\n}\r\n\r\nfunction matchKey(persianKey: string): keyof IState  {\r\n    switch (persianKey) {\r\n        case 'نام':\r\n            return 'firstname';\r\n        case 'نام خانوادگی':\r\n            return 'lastname';\r\n        case 'کد ملی':\r\n            return 'nationalCode';\r\n        case 'شماره شناسنامه':\r\n            return 'identifyCardCode';\r\n        case 'تاریخ تولد':\r\n            return 'birthDate';\r\n        case 'آدرس':\r\n            return 'address';\r\n        case 'شماره تلفن':\r\n            return 'phoneNumber';\r\n        case 'کد پستی':\r\n            return 'postalCode';\r\n        case 'جنسیت':\r\n            return 'gender';\r\n        default:\r\n            return 'firstname';\r\n    }\r\n}\r\n\r\n\r\nfunction CarCertification(): React.ReactElement {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        const type = matchKey(event.currentTarget.name) as IAction['type'];\r\n        const payload = event.currentTarget.value;\r\n\r\n        dispatch({payload, type})\r\n    }, []);\r\n\r\n    const handleChangeSelectBox = useCallback((event: React.FormEvent<HTMLSelectElement>) => {\r\n        const type = matchKey(event.currentTarget.name) as IAction['type'];\r\n        const payload = event.currentTarget.value;\r\n        dispatch({payload, type})\r\n    }, []);\r\n\r\n    const handlePrint = useCallback(() => {\r\n        printForm();\r\n    }, []);\r\n\r\n    const handleBranches = useCallback(() => {\r\n        window.open('http://www.epolice.ir/dafater/', '_blank');\r\n    }, []);\r\n\r\n    const handleSubmit = useCallback(() => {\r\n        fakeSubmit();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                title='ثبت نام گواهینامه'\r\n                inputs={[\r\n                    {lebelName: 'نام', type: 'text', value: state.firstname, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\r\n                    {lebelName: 'نام خانوادگی', type: 'text', value: state.lastname, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\r\n                    {lebelName: 'کد ملی', type: 'text', value: state.nationalCode, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\r\n                    {lebelName: 'شماره شناسنامه', type: 'text', value: state.identifyCardCode, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\r\n                    {lebelName: 'تاریخ تولد', type: 'text', value: state.birthDate, onChange: handleChange, placeholder: 'YYYY-MM-DD'},\r\n                    {lebelName: 'آدرس', type: 'text', value: state.address, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\r\n                    {lebelName: 'شماره تلفن', type: 'text', value: state.phoneNumber, onChange: handleChange, placeholder: 'شماره تلفن ۱۱ رقمی'},\r\n                    {lebelName: 'کد پستی', type: 'text', value: state.postalCode, onChange: handleChange, placeholder: 'کد پستی ۱۰ رقمی'},\r\n                ]}\r\n                selectBoxes={[\r\n                    {lebelName: 'جنسیت', onChange: handleChangeSelectBox, value: state.gender, optionsName: ['مرد', 'زن']}\r\n                ]}\r\n                fileSelectors={[\r\n                    {lebelName: 'تاییدیه معاینه پزشکی'},\r\n                    {lebelName: 'تصویر متقاضی'},\r\n                    {lebelName: 'تصویر کارت ملی'}\r\n                ]}\r\n                buttons={[\r\n                    {caption: 'ثبت', onClick: handleSubmit}\r\n                ]}\r\n            />\r\n            <Form\r\n                title='سایر گزینه‌های مرتبط با گواهینامه'\r\n                buttons={[\r\n                    {caption: 'پرینت فرم گواهینامه', onClick: handlePrint},\r\n                    {caption: 'لیست مراکز مربوطه', onClick: handleBranches},\r\n                    {caption: 'ویرایش مشخصات گواهینامه', onClick: () => {}}\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default memo(CarCertification);","import { memo, useCallback, useReducer } from 'react';\r\nimport Form from '../../../components/Form';\r\nimport {printForm, fakeSubmit} from '../../../utilities';\r\n\r\n\r\ninterface IState {\r\n    address: string;\r\n    birthDate: string;\r\n    phoneNumber: string;\r\n    postalCode: string;\r\n    nationalCode: string;\r\n    gender: string;\r\n    firstname: string;\r\n    lastname: string;\r\n    identifyCardCode: string;\r\n    passportType: string;\r\n    maritalStatus: string;\r\n}\r\n\r\nconst initialState: IState = {\r\n    address: '',\r\n    birthDate: '',\r\n    firstname: '',\r\n    gender: 'مرد',\r\n    identifyCardCode: '',\r\n    lastname: '',\r\n    nationalCode: '',\r\n    phoneNumber: '',\r\n    postalCode: '',\r\n    passportType: 'تحت تکلیف همسر',\r\n    maritalStatus: 'معافیت سنی'\r\n}\r\n\r\ninterface IAction {\r\n    type: 'firstname' | 'gender' | 'lastname' | 'address' | 'birthDate' |\r\n    'identifyCardCode' | 'nationalCode' | 'postalCode' | 'phoneNumber' |\r\n    'birthPlace' | 'email' | 'workingId' | 'password' | 'passportType' | 'maritalStatus';\r\n    payload: string;\r\n};\r\nfunction reducer(state: IState, action: IAction) {\r\n    switch(action.type) {\r\n        case 'address':\r\n            return {...state, address: action.payload};\r\n        case 'birthDate':\r\n            return {...state, birthDate: action.payload};\r\n        case 'firstname':\r\n            return {...state, firstname: action.payload};\r\n        case 'gender':\r\n            return {...state, gender: action.payload};\r\n        case 'identifyCardCode':\r\n            return {...state, identifyCardCode: action.payload};\r\n        case 'lastname':\r\n            return {...state, lastname: action.payload};\r\n        case 'nationalCode':\r\n            return {...state, nationalCode: action.payload};\r\n        case 'phoneNumber':\r\n            return {...state, phoneNumber: action.payload};\r\n        case 'postalCode':\r\n            return {...state, postalCode: action.payload};\r\n        case 'passportType':\r\n            return {...state, passportType: action.payload};\r\n        case 'maritalStatus':\r\n            return {...state, maritalStatus: action.payload};\r\n        default:\r\n            return {...state};\r\n\r\n    }\r\n}\r\n\r\nfunction matchKey(persianKey: string): keyof IState  {\r\n    switch (persianKey) {\r\n        case 'نام':\r\n            return 'firstname';\r\n        case 'نام خانوادگی':\r\n            return 'lastname';\r\n        case 'کد ملی':\r\n            return 'nationalCode';\r\n        case 'شماره شناسنامه':\r\n            return 'identifyCardCode';\r\n        case 'تاریخ تولد':\r\n            return 'birthDate';\r\n        case 'آدرس':\r\n            return 'address';\r\n        case 'شماره تلفن':\r\n            return 'phoneNumber';\r\n        case 'کد پستی':\r\n            return 'postalCode';\r\n        case 'جنسیت':\r\n            return 'gender';\r\n        case 'وضعیت سربازی':\r\n            return 'maritalStatus';\r\n        case 'نوع گذرنامه':\r\n            return 'passportType';\r\n        default:\r\n            return 'firstname';\r\n    }\r\n}\r\n\r\n\r\nfunction Passport(): React.ReactElement {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        const type = matchKey(event.currentTarget.name) as IAction['type'];\r\n        const payload = event.currentTarget.value;\r\n\r\n        dispatch({payload, type})\r\n    }, []);\r\n\r\n    const handleChangeSelectBox = useCallback((event: React.FormEvent<HTMLSelectElement>) => {\r\n        const type = matchKey(event.currentTarget.name) as IAction['type'];\r\n        const payload = event.currentTarget.value;\r\n        dispatch({payload, type})\r\n    }, []);\r\n\r\n    const handlePrint = useCallback(() => {\r\n        printForm();\r\n    }, []);\r\n\r\n    const handleMarital = useCallback(() => {\r\n        window.open('https://services.epolice.ir/prtl/login?service=https%3A%2F%2Fservices.epolice.ir%3A443%2Fintp%2Fticket_check', '_blank');\r\n    }, []);\r\n\r\n    const handleSubmit = useCallback(() => {\r\n        fakeSubmit();\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                title='ثبت نام گذرنامه'\r\n                inputs={[\r\n                    {lebelName: 'نام', type: 'text', value: state.firstname, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\r\n                    {lebelName: 'نام خانوادگی', type: 'text', value: state.lastname, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\r\n                    {lebelName: 'کد ملی', type: 'text', value: state.nationalCode, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\r\n                    {lebelName: 'شماره شناسنامه', type: 'text', value: state.identifyCardCode, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\r\n                    {lebelName: 'تاریخ تولد', type: 'text', value: state.birthDate, onChange: handleChange, placeholder: 'YYYY-MM-DD'},\r\n                    {lebelName: 'آدرس', type: 'text', value: state.address, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\r\n                    {lebelName: 'شماره تلفن', type: 'text', value: state.phoneNumber, onChange: handleChange, placeholder: 'شماره تلفن ۱۱ رقمی'},\r\n                    {lebelName: 'کد پستی', type: 'text', value: state.postalCode, onChange: handleChange, placeholder: 'کد پستی ۱۰ رقمی'},\r\n                ]}\r\n                selectBoxes={[\r\n                    {lebelName: 'جنسیت', onChange: handleChangeSelectBox, value: state.gender, optionsName: ['مرد', 'زن']},\r\n                    {lebelName: 'نوع گذرنامه', onChange: handleChangeSelectBox, value: state.passportType,\r\n                        optionsName: ['تحت تکلف همسر', 'تحت تکلف پدر', 'عادی']},\r\n                    {lebelName: 'وضعیت سربازی', onChange: handleChangeSelectBox, value: state.maritalStatus,\r\n                        optionsName: ['معافیت سنی', 'معاف', 'معافیت تحصیلی', 'پایان خدمت', 'تعلق نمیگیرد']},\r\n                ]}\r\n                fileSelectors={[\r\n                    {lebelName: 'تصویر متقاضی'},\r\n                    {lebelName: 'تصویر کارت ملی'}\r\n                ]}\r\n                buttons={[\r\n                    {caption: 'ثبت', onClick: handleSubmit}\r\n                ]}\r\n            />\r\n            <Form\r\n                title='سایر گزینه‌های مرتبط با گذرنامه'\r\n                buttons={[\r\n                    {caption: 'پرینت فرم گذرنامه', onClick: handlePrint},\r\n                    {caption: 'استعلام وضعیت سربازی', onClick: handleMarital},\r\n                    {caption: 'ویرایش مشخصات گذرنامه', onClick: () => {}}\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default memo(Passport);","import { memo, useCallback, useReducer } from 'react';\r\nimport Form from '../../../components/Form';\r\nimport {printForm, fakeSubmit} from '../../../utilities';\r\n\r\n\r\n\r\ninterface IState {\r\n    address: string;\r\n    birthDate: string;\r\n    phoneNumber: string;\r\n    postalCode: string;\r\n    nationalCode: string;\r\n    gender: string;\r\n    firstname: string;\r\n    lastname: string;\r\n    identifyCardCode: string;\r\n    birthPlace: string;\r\n}\r\n\r\nconst initialState: IState = {\r\n    address: '',\r\n    birthDate: '',\r\n    firstname: '',\r\n    gender: 'مرد',\r\n    identifyCardCode: '',\r\n    lastname: '',\r\n    nationalCode: '',\r\n    phoneNumber: '',\r\n    postalCode: '',\r\n    birthPlace: ''\r\n}\r\n\r\ninterface IAction {\r\n    type: 'firstname' | 'gender' | 'lastname' | 'address' | 'birthDate' |\r\n    'identifyCardCode' | 'nationalCode' | 'postalCode' | 'phoneNumber' | 'birthPlace';\r\n    payload: string;\r\n};\r\nfunction reducer(state: IState, action: IAction) {\r\n    switch(action.type) {\r\n        case 'address':\r\n            return {...state, address: action.payload};\r\n        case 'birthDate':\r\n            return {...state, birthDate: action.payload};\r\n        case 'firstname':\r\n            return {...state, firstname: action.payload};\r\n        case 'gender':\r\n            return {...state, gender: action.payload};\r\n        case 'identifyCardCode':\r\n            return {...state, identifyCardCode: action.payload};\r\n        case 'lastname':\r\n            return {...state, lastname: action.payload};\r\n        case 'nationalCode':\r\n            return {...state, nationalCode: action.payload};\r\n        case 'phoneNumber':\r\n            return {...state, phoneNumber: action.payload};\r\n        case 'postalCode':\r\n            return {...state, postalCode: action.payload};\r\n        case 'birthPlace':\r\n            return {...state, birthPlace: action.payload};\r\n        default:\r\n            return {...state};\r\n\r\n    }\r\n}\r\n\r\nfunction matchKey(persianKey: string): keyof IState  {\r\n    switch (persianKey) {\r\n        case 'نام':\r\n            return 'firstname';\r\n        case 'نام خانوادگی':\r\n            return 'lastname';\r\n        case 'کد ملی':\r\n            return 'nationalCode';\r\n        case 'شماره شناسنامه':\r\n            return 'identifyCardCode';\r\n        case 'تاریخ تولد':\r\n            return 'birthDate';\r\n        case 'آدرس':\r\n            return 'address';\r\n        case 'شماره تلفن':\r\n            return 'phoneNumber';\r\n        case 'کد پستی':\r\n            return 'postalCode';\r\n        case 'جنسیت':\r\n            return 'gender';\r\n        case 'محل تولد':\r\n            return 'birthPlace';\r\n        default:\r\n            return 'firstname';\r\n    }\r\n}\r\n\r\n\r\nfunction NationalCard(): React.ReactElement {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        const type = matchKey(event.currentTarget.name) as IAction['type'];\r\n        const payload = event.currentTarget.value;\r\n\r\n        dispatch({payload, type})\r\n    }, []);\r\n\r\n    const handleChangeSelectBox = useCallback((event: React.FormEvent<HTMLSelectElement>) => {\r\n        const type = matchKey(event.currentTarget.name) as IAction['type'];\r\n        const payload = event.currentTarget.value;\r\n        dispatch({payload, type})\r\n    }, []);\r\n\r\n    const handlePrint = useCallback(() => {\r\n        printForm();\r\n    }, []);\r\n\r\n    const handleSubmit = useCallback(() => {\r\n        fakeSubmit();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                title='ثبت نام کارت ملی'\r\n                inputs={[\r\n                    {lebelName: 'نام', type: 'text', value: state.firstname, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\r\n                    {lebelName: 'نام خانوادگی', type: 'text', value: state.lastname, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\r\n                    {lebelName: 'کد ملی', type: 'text', value: state.nationalCode, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\r\n                    {lebelName: 'شماره شناسنامه', type: 'text', value: state.identifyCardCode, onChange: handleChange, placeholder: 'کد ۱۰ رقمی'},\r\n                    {lebelName: 'تاریخ تولد', type: 'text', value: state.birthDate, onChange: handleChange, placeholder: 'YYYY-MM-DD'},\r\n                    {lebelName: 'محل تولد', type: 'text', value: state.birthPlace, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\r\n                    {lebelName: 'آدرس', type: 'text', value: state.address, onChange: handleChange, placeholder: 'به فارسی وارد کنید'},\r\n                    {lebelName: 'شماره تلفن', type: 'text', value: state.phoneNumber, onChange: handleChange, placeholder: 'شماره تلفن ۱۱ رقمی'},\r\n                    {lebelName: 'کد پستی', type: 'text', value: state.postalCode, onChange: handleChange, placeholder: 'کد پستی ۱۰ رقمی'},\r\n                ]}\r\n                selectBoxes={[\r\n                    {lebelName: 'جنسیت', onChange: handleChangeSelectBox, value: state.gender, optionsName: ['مرد', 'زن']}\r\n                ]}\r\n                fileSelectors={[\r\n                    {lebelName: 'تصویر صفحه اول شناسنامه'},\r\n                    {lebelName: 'تصویر متقاضی'},\r\n                    {lebelName: 'اسکن اثر انگشت'}\r\n                ]}\r\n                buttons={[\r\n                    {caption: 'ثبت', onClick: handleSubmit}\r\n                ]}\r\n            />\r\n            <Form\r\n                title='سایر گزینه‌های مرتبط با کارت ملی'\r\n                buttons={[\r\n                    {caption: 'پرینت فرم کارت ملی', onClick: handlePrint},\r\n                    {caption: 'ویرایش مشخصات کارت ملی', onClick: () => {}}\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default memo(NationalCard);","import { memo, useCallback, useState } from 'react';\r\nimport Form from '../../../components/Form';\r\nimport {printForm, fakeSubmit} from '../../../utilities';\r\n\r\nfunction CarViolation(): React.ReactElement {\r\n    const [carPlateNumber, setCarPlateNumber] = useState<string>('');\r\n    const [carSerial, setCarSerial] = useState<string>('');\r\n\r\n    const handleChangeCarPlateNumber = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        setCarPlateNumber(event.currentTarget.value.trim());\r\n    }, []);\r\n\r\n    const handleChangeCarSerial = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        setCarSerial(event.currentTarget.value.trim());\r\n    }, []);\r\n\r\n    const handlePrint = useCallback(() => {\r\n        printForm();\r\n    }, []);\r\n\r\n    const handleSubmit = useCallback(() => {\r\n        fakeSubmit();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                title='خلافی خودرو'\r\n                inputs={[\r\n                    {lebelName: 'شماره پلاک', type: 'text', value: carPlateNumber, onChange: handleChangeCarPlateNumber, placeholder: 'XXOXXX-YY'},\r\n                    {lebelName: 'شماره سریال کارت ماشین', type: 'text', value: carSerial, onChange: handleChangeCarSerial, placeholder: 'کد 9 رقمی'}\r\n                ]}\r\n                buttons={[\r\n                    {caption: 'استعلام', onClick: handleSubmit},\r\n                    {caption: 'پرینت خلافی', onClick: handlePrint},\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default memo(CarViolation);","import { memo, useCallback, useState } from 'react';\r\nimport Form from '../../../components/Form';\r\nimport {fakeGetStatus} from '../../../utilities';\r\n\r\nfunction SendingStatus(): React.ReactElement {\r\n    const [nationalCode1, setNationalCode1] = useState<string>('');\r\n    const [nationalCode2, setNationalCode2] = useState<string>('');\r\n    const [trackingCode1, setTrackingCode1] = useState<string>('');\r\n    const [trackingCode2, setTrackingCode2] = useState<string>('');\r\n    const [indentifyCardCode, setIndentifyCardCode] = useState<string>('');\r\n    const [birthDate, setBirthDate] = useState<string>('');\r\n    const [birthPlace, setBirthPlace] = useState<string>('');\r\n\r\n    const handleChangeNationalCode1 = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        setNationalCode1(event.currentTarget.value.trim());\r\n    }, []);\r\n    const handleChangeNationalCode2 = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        setNationalCode2(event.currentTarget.value.trim());\r\n    }, []);\r\n    const handleChangeTrackingCode1 = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        setTrackingCode1(event.currentTarget.value.trim());\r\n    }, []);\r\n    const handleChangeTrackingCode2 = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        setTrackingCode2(event.currentTarget.value.trim());\r\n    }, []);\r\n    const handleChangeIndentifyCardCode = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        setIndentifyCardCode(event.currentTarget.value.trim());\r\n    }, []);\r\n    const handleChangeBirthDate = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        setBirthDate(event.currentTarget.value.trim());\r\n    }, []);\r\n    const handleChangeBirthPlace = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        setBirthPlace(event.currentTarget.value.trim());\r\n    }, []);\r\n\r\n    const handleSubmit = useCallback(() => {\r\n        fakeGetStatus();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                title='پیگیری وضعیت صدور گواهینامه'\r\n                inputs={[\r\n                    {lebelName: 'کد ملی', type: 'text', value: nationalCode1, onChange: handleChangeNationalCode1, placeholder: 'کد ۱۰ رقمی'},\r\n                    {lebelName: 'کد پیگیری', type: 'text', value: trackingCode1, onChange: handleChangeTrackingCode1, placeholder: 'کد ۲۰ رقمی'}\r\n                ]}\r\n                buttons={[{caption: 'استعلام', onClick: handleSubmit}]}\r\n            />\r\n            <Form\r\n                title='پیگیری وضعیت صدور گذرنامه'\r\n                inputs={[\r\n                    {lebelName: 'کد ملی', type: 'text', value: nationalCode2, onChange: handleChangeNationalCode2, placeholder: 'کد ۱۰ رقمی'},\r\n                    {lebelName: 'کد پیگیری', type: 'text', value: trackingCode2, onChange: handleChangeTrackingCode2, placeholder: 'کد ۲۰ رقمی'}\r\n                ]}\r\n                buttons={[{caption: 'استعلام', onClick: handleSubmit}]}\r\n            />\r\n            <Form\r\n                title='پیگیری وضعیت صدور کارت ملی'\r\n                inputs={[\r\n                    {lebelName: 'شماره شناسنامه', type: 'text', value: indentifyCardCode, onChange: handleChangeIndentifyCardCode, placeholder: 'کد ۱۰ رقمی'},\r\n                    {lebelName: 'محل تولد', type: 'text', value: birthPlace, onChange: handleChangeBirthPlace, placeholder: 'به فارسی وارد کنید'},\r\n                    {lebelName: 'تاریخ تولد', type: 'text', value: birthDate, onChange: handleChangeBirthDate, placeholder: 'YYYY-MM-DD'}\r\n                ]}\r\n                buttons={[{caption: 'استعلام', onClick: handleSubmit}]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default memo(SendingStatus);","import {memo, useState, useCallback} from 'react';\r\nimport {withRouter, useHistory, Route} from 'react-router-dom';\r\nimport Form from '../../components/Form';\r\nimport {toast} from 'react-toastify';\r\nimport CarCertification from './CarCertification';\r\nimport Passport from './Passport';\r\nimport NationalCard from './NationalCard';\r\nimport CarViolation from './CarViolation';\r\nimport SendingStatus from './SendingStatus';\r\n\r\n\r\n\r\nfunction Employee(): React.ReactElement {\r\n    const [loggedIn, setLoggedIn] = useState<'LOGIN' | 'LOGOUT' | 'FORGET'>('LOGOUT');\r\n    const [workingId, setWorkingId] = useState<string>('');\r\n    const [nationalCode, setNationalCode] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogout = useCallback(() => {\r\n        setWorkingId('');\r\n        setPassword('');\r\n        setNationalCode('');\r\n        setLoggedIn('LOGOUT');\r\n        history.push('/employee');\r\n    }, [history]);\r\n\r\n    const handleWokingIdChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        setWorkingId(event.currentTarget.value?.trim().toLowerCase() || '')\r\n    }, []);\r\n\r\n    const handlePassworChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value?.trim().toLowerCase() || '')\r\n    }, []);\r\n\r\n    const handleNationalCodeChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\r\n        setNationalCode(event.currentTarget.value?.trim().toLowerCase() || '')\r\n    }, []);\r\n\r\n    const handleFogetPasswordMode = useCallback(() => {\r\n        setLoggedIn('FORGET');\r\n    }, []);\r\n\r\n    const handleResetPassword = useCallback(async () => {\r\n        if (workingId !== '' && nationalCode !== '') {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({workingId: workingId, nationalCode: nationalCode})\r\n            };\r\n            toast.info('لطفا چندلحظه صبر کنید ...');\r\n            const response = await fetch('https://quizlab.ir/api/employee/reset-password', requestOptions);\r\n            const data = await response.json();\r\n\r\n            if (data.status === 'OK') {\r\n                toast.success('رمز جدید به ایمیل شما ارسال شد!');\r\n            }\r\n            else if (data.status === 'WRONG') {\r\n                toast.warn('کد پرسنلی یا کد ملی اشتباه است!');\r\n            }\r\n            else if (data.status === 'BAD EMAIL') {\r\n                toast.warn('خطایی در سرویس ایمیل رخ داده است!');\r\n            }\r\n            else if (data.status === 'ERROR') {\r\n                toast.error('خطایی در سرور رخ داده است!');\r\n            }\r\n            else {\r\n                toast.error('خطا در اتصال به سرور!');\r\n            }\r\n        }\r\n    }, [workingId, nationalCode]);\r\n\r\n    const handleLogin = useCallback(async () => {\r\n        if (workingId !== '' && password !== '') {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({workingId, password})\r\n            };\r\n            const response = await fetch('https://quizlab.ir/api/employee/login', requestOptions);\r\n            const data = await response.json();\r\n\r\n            if (data.status === 'OK') {\r\n                toast.success('با موفقیت وارد شدید!');\r\n                setLoggedIn('LOGIN');\r\n            }\r\n            else if (data.status === 'WRONG') {\r\n                toast.warn('نام کاربری یا رمز عبور اشتباه است!');\r\n            }\r\n            else if (data.status === 'ERROR') {\r\n                toast.error('خطایی در سرور رخ داده!');\r\n            }\r\n            else {\r\n                toast.error('خطا در اتصال به سرور!');\r\n            }\r\n        }\r\n    }, [workingId, password]);\r\n\r\n    return (\r\n        <>\r\n        {loggedIn === 'LOGIN' ?\r\n            <>\r\n                <Form\r\n                    title='بخش ها'\r\n                    buttons={[\r\n                        {caption: 'گواهینامه', onClick: () => {history.push('/employee/car-certification')}},\r\n                        {caption: 'گذرنامه', onClick: () => {history.push('/employee/passport')}},\r\n                        {caption: 'کارت ملی', onClick: () => {history.push('/employee/national-card')}},\r\n                        {caption: 'خلافی خودرو', onClick: () => {history.push('/employee/car-violation')}},\r\n                        {caption: 'استعلام وضعیت صدور', onClick: () => {history.push('/employee/sending-status')}},\r\n                        {caption: 'خروج', onClick: handleLogout},\r\n                    ]}\r\n                />\r\n                <Route path='/employee/car-certification' exact>\r\n                    <CarCertification />\r\n                </Route>\r\n                <Route path='/employee/passport' exact>\r\n                    <Passport />\r\n                </Route>\r\n                <Route path='/employee/national-card' exact>\r\n                    <NationalCard />\r\n                </Route>\r\n                <Route path='/employee/car-violation' exact>\r\n                    <CarViolation />\r\n                </Route>\r\n                <Route path='/employee/sending-status' exact>\r\n                    <SendingStatus />\r\n                </Route>\r\n            </>\r\n        :\r\n            loggedIn === 'LOGOUT' ?\r\n                <Form\r\n                    title='ورود کارمند'\r\n                    inputs={[\r\n                        {lebelName: 'کد پرسنلی', type: 'text', value: workingId, onChange: handleWokingIdChange, placeholder: 'کد ۱۰ رقمی'},\r\n                        {lebelName: 'رمز عبور', type: 'password', value: password, onChange: handlePassworChange, placeholder: 'xxxxxxxx'},\r\n                    ]}\r\n                    buttons={[\r\n                        {caption: 'ورود', onClick: handleLogin},\r\n                        {caption: 'فراموشی رمز عبور', onClick: handleFogetPasswordMode}\r\n                    ]}\r\n                />\r\n            :\r\n                <Form\r\n                    title='فراموشی رمز عبور'\r\n                    inputs={[\r\n                        {lebelName: 'کد پرسنلی', onChange: handleWokingIdChange, type: 'text', value: workingId, placeholder: 'کد ۱۰ رقمی'},\r\n                        {lebelName: 'کد ملی', onChange: handleNationalCodeChange, type: 'text', value: nationalCode, placeholder: 'کد ۱۰ رقمی'}\r\n                    ]}\r\n                    buttons={[\r\n                        {caption: 'ارسال رمز عبور جدید', onClick: handleResetPassword},\r\n                        {caption: 'بازگشت', onClick: handleLogout}\r\n                    ]}\r\n                />\r\n    }  \r\n    </>\r\n    );\r\n}\r\n\r\n\r\nexport default memo(withRouter(Employee));","import {memo} from 'react';\nimport {Route} from 'react-router-dom';\nimport {ToastContainer} from 'react-toastify';\n\nimport Navbar from '../../components/Navbar';\nimport Start from '../Start';\nimport Admin from '../../layouts/Admin';\nimport {globalStyles} from './styles';\nimport Employee from '../../layouts/Employee';\n\n\nfunction Application(): React.ReactElement {\n    return (\n        <>\n            {globalStyles}\n            <Navbar \n                items={[\n                    {link: '/', name: 'سیستم دفاتر پیشخوان'},\n                    {link: '/employee', name: 'ورود کارمند'},\n                    {link: '/admin', name: 'ورود ادمین'}\n                ]}\n            />\n            <Route path='/' exact>\n                <Start />\n            </Route>\n            <Route path='/employee'>\n                <Employee />\n            </Route>\n            <Route path='/admin'>\n                <Admin />\n            </Route>\n            <ToastContainer\n                position=\"bottom-right\"\n                autoClose={3500}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={true}\n                draggable\n                pauseOnFocusLoss={false}\n                pauseOnHover\n            />\n        </>\n    )\n}\n\n\nexport default memo(Application);","import {StrictMode} from 'react';\nimport {render} from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport Application from './pages/Appplication';\nimport '../node_modules/react-toastify/dist/ReactToastify.min.css';\n\n\nimport './utilities/fonts/vazir/font-face.css';\n\n\nrender(\n    <StrictMode>\n        <BrowserRouter>\n            <Application />\n        </BrowserRouter>\n    </StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}